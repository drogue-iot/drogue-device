name: CI

on:
  push:
    branches: [staging, trying, main]
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always

jobs:

  device:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - name: cache
        id: cache-target
        uses: actions/cache@v2
        with:
          path: target
          key: ${{ runner.os }}-device

      - name: Build and test
        run: |
          curl -L -o /usr/local/bin/cargo-batch https://github.com/embassy-rs/cargo-batch/releases/download/batch-0.1.0/cargo-batch
          chmod +x /usr/local/bin/cargo-batch
          cargo xtask ci_batch

      - name: Documentation
        run: cargo xtask docs

      - name: Verify no changes to source modules
        run: git diff --exit-code

#      - id: set-matrix
#        run: |
#          matrix=$((
#            echo '{ "example" : ['
#            cargo xtask matrix
#            echo "]}"
#          ) | jq -c .)
#          echo $matrix
#          echo $matrix | jq .
#          echo "::set-output name=matrix::$matrix"

  #check-matrix:
  #  runs-on: ubuntu-20.04
  #  needs: matrix
  #  steps:
  #    - name: Install json2yaml
  #      run: |
  #        sudo npm install -g json2yaml

  #    - name: Check matrix definition
  #      run: |
  #        matrix='${{ needs.matrix.outputs.matrix }}'
  #        echo $matrix
  #        echo $matrix | jq .
  #        echo $matrix | json2yaml


  #examples:
  #  needs: device
  #  runs-on: ubuntu-20.04
  #  strategy:
  #    fail-fast: false
  #    matrix: ${{fromJson(needs.device.outputs.matrix)}}

  #  steps:
  #    - uses: actions/checkout@v2

  #    - name: cache
  #      id: cache-target
  #      uses: actions/cache@v2
  #      with:
  #        path: ${{matrix.example}}/target
  #        key: ${{ runner.os }}-${{ matrix.example }}

  #    - name: Check
  #      run: cargo xtask check ${{ matrix.example }}

  #    - name: Build
  #      run: cargo xtask build ${{ matrix.example }}
  test-examples:
    needs: device
    # Allow this job to fail
    continue-on-error: true
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - name: cache
        id: cache-target
        uses: actions/cache@v2
        with:
          path: target
          key: ${{ runner.os }}-tests

      - name: Install drg tool
        run: cargo install --git https://github.com/drogue-iot/drg.git

      - name: Check
        run: cargo xtask test_examples
        env:
          DROGUE_CLOUD_API: ${{secrets.DROGUE_CLOUD_API}}
          DROGUE_CLOUD_ACCESS_TOKEN: ${{secrets.DROGUE_CLOUD_ACCESS_TOKEN}}
